# Правила разработки для микросервиса Campaign-API

## Общие принципы
1. Поддерживайте единый стиль кода во всех компонентах микросервиса, соответствующий общим соглашениям Spring Boot.
2. Документируйте сложную бизнес-логику рекламных кампаний и интеграцию с TdLib.
3. Используйте JavaDoc для всех публичных методов в контроллерах, сервисах и репозиториях.

## Интеграция с TdLib
1. При взаимодействии с TdLib микросервисом учитывайте ограничения Telegram API по скорости отправки сообщений.
2. Реализуйте механизмы повторных попыток и обработку ошибок при отправке данных о кампаниях в TdLib.
3. Логируйте все этапы создания, запуска кампаний и отправки сообщений для упрощения диагностики проблем.

## Безопасность
1. Храните конфигурационные параметры и токены в переменных окружения или .env файле, не в коде.
2. Валидируйте все входящие данные в DTO объектах перед обработкой, особенно для креативов и сообщений.
3. Используйте константы для типов кампаний, статусов и других перечислений вместо "магических строк".

## Производительность
1. Реализуйте асинхронную обработку для длительных операций по созданию и запуску кампаний.
2. Оптимизируйте запросы к базе данных для работы с большими объемами кампаний и креативов.
3. Используйте пагинацию при возврате больших списков кампаний, сообщений и статистики.

## Работа с данными
1. Следите за целостностью связей между Campaign, CampaignCreative и Message сущностями.
2. Используйте транзакции при операциях, затрагивающих несколько сущностей одновременно.
3. Правильно обрабатывайте статусы кампаний и сообщений на всех этапах их жизненного цикла.

## Тестирование
1. Создавайте модульные тесты для каждого сервиса и контроллера с имитацией внешних зависимостей.
2. Тестируйте различные сценарии проведения кампаний (A/B тесты, немедленные, отложенные).
3. Разрабатывайте интеграционные тесты для проверки взаимодействия с TdLib и другими микросервисами. 